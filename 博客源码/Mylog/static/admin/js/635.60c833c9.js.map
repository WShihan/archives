{"version":3,"file":"static/admin/js/635.60c833c9.js","mappings":"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","sources":["webpack://my_app_vue/./node_modules/rbush/rbush.min.js","webpack://my_app_vue/./src/api.js","webpack://my_app_vue/./src/pages/dashboard/overview/distribution/index.vue","webpack://my_app_vue/./node_modules/ol/events/Event.js","webpack://my_app_vue/./node_modules/ol/ObjectEventType.js","webpack://my_app_vue/./node_modules/ol/Disposable.js","webpack://my_app_vue/./node_modules/ol/array.js","webpack://my_app_vue/./node_modules/ol/functions.js","webpack://my_app_vue/./node_modules/ol/obj.js","webpack://my_app_vue/./node_modules/ol/events/Target.js","webpack://my_app_vue/./node_modules/ol/events/EventType.js","webpack://my_app_vue/./node_modules/ol/events.js","webpack://my_app_vue/./node_modules/ol/Observable.js","webpack://my_app_vue/./node_modules/ol/util.js","webpack://my_app_vue/./node_modules/ol/Object.js","webpack://my_app_vue/./node_modules/ol/CollectionEventType.js","webpack://my_app_vue/./node_modules/ol/Collection.js","webpack://my_app_vue/./node_modules/ol/layer/Property.js","webpack://my_app_vue/./node_modules/ol/asserts.js","webpack://my_app_vue/./node_modules/ol/math.js","webpack://my_app_vue/./node_modules/ol/layer/Base.js","webpack://my_app_vue/./node_modules/ol/render/EventType.js","webpack://my_app_vue/./node_modules/ol/ViewHint.js","webpack://my_app_vue/./node_modules/ol/ViewProperty.js","webpack://my_app_vue/./node_modules/ol/tilegrid/common.js","webpack://my_app_vue/./node_modules/ol/proj/Units.js","webpack://my_app_vue/./node_modules/ol/proj/Projection.js","webpack://my_app_vue/./node_modules/ol/proj/epsg3857.js","webpack://my_app_vue/./node_modules/ol/proj/epsg4326.js","webpack://my_app_vue/./node_modules/ol/proj/projections.js","webpack://my_app_vue/./node_modules/ol/proj/transforms.js","webpack://my_app_vue/./node_modules/ol/extent/Relationship.js","webpack://my_app_vue/./node_modules/ol/extent.js","webpack://my_app_vue/./node_modules/ol/coordinate.js","webpack://my_app_vue/./node_modules/ol/sphere.js","webpack://my_app_vue/./node_modules/ol/console.js","webpack://my_app_vue/./node_modules/ol/proj.js","webpack://my_app_vue/./node_modules/ol/centerconstraint.js","webpack://my_app_vue/./node_modules/ol/resolutionconstraint.js","webpack://my_app_vue/./node_modules/ol/rotationconstraint.js","webpack://my_app_vue/./node_modules/ol/easing.js","webpack://my_app_vue/./node_modules/ol/transform.js","webpack://my_app_vue/./node_modules/ol/geom/flat/transform.js","webpack://my_app_vue/./node_modules/ol/geom/Geometry.js","webpack://my_app_vue/./node_modules/ol/geom/SimpleGeometry.js","webpack://my_app_vue/./node_modules/ol/geom/flat/closest.js","webpack://my_app_vue/./node_modules/ol/geom/flat/deflate.js","webpack://my_app_vue/./node_modules/ol/geom/flat/simplify.js","webpack://my_app_vue/./node_modules/ol/geom/flat/inflate.js","webpack://my_app_vue/./node_modules/ol/geom/flat/area.js","webpack://my_app_vue/./node_modules/ol/geom/LinearRing.js","webpack://my_app_vue/./node_modules/ol/geom/Point.js","webpack://my_app_vue/./node_modules/ol/geom/flat/contains.js","webpack://my_app_vue/./node_modules/ol/geom/flat/interiorpoint.js","webpack://my_app_vue/./node_modules/ol/geom/flat/segments.js","webpack://my_app_vue/./node_modules/ol/geom/flat/intersectsextent.js","webpack://my_app_vue/./node_modules/ol/geom/flat/reverse.js","webpack://my_app_vue/./node_modules/ol/geom/flat/orient.js","webpack://my_app_vue/./node_modules/ol/geom/Polygon.js","webpack://my_app_vue/./node_modules/ol/View.js","webpack://my_app_vue/./node_modules/ol/layer/Layer.js","webpack://my_app_vue/./node_modules/ol/ImageState.js","webpack://my_app_vue/./node_modules/ol/size.js","webpack://my_app_vue/./node_modules/ol/style/Image.js","webpack://my_app_vue/./node_modules/color-space/rgb.js","webpack://my_app_vue/./node_modules/color-space/xyz.js","webpack://my_app_vue/./node_modules/color-space/luv.js","webpack://my_app_vue/./node_modules/color-space/lchuv.js","webpack://my_app_vue/./node_modules/color-parse/node_modules/color-name/index.js","webpack://my_app_vue/./node_modules/color-parse/index.js","webpack://my_app_vue/./node_modules/color-space/hsl.js","webpack://my_app_vue/./node_modules/color-rgba/index.js","webpack://my_app_vue/./node_modules/ol/color.js","webpack://my_app_vue/./node_modules/ol/has.js","webpack://my_app_vue/./node_modules/ol/dom.js","webpack://my_app_vue/./node_modules/ol/Image.js","webpack://my_app_vue/./node_modules/ol/style/IconImageCache.js","webpack://my_app_vue/./node_modules/ol/style/IconImage.js","webpack://my_app_vue/./node_modules/ol/colorlike.js","webpack://my_app_vue/./node_modules/ol/css.js","webpack://my_app_vue/./node_modules/ol/render/canvas.js","webpack://my_app_vue/./node_modules/ol/style/RegularShape.js","webpack://my_app_vue/./node_modules/ol/style/Circle.js","webpack://my_app_vue/./node_modules/ol/style/Fill.js","webpack://my_app_vue/./node_modules/ol/style/Stroke.js","webpack://my_app_vue/./node_modules/ol/style/Style.js","webpack://my_app_vue/./node_modules/ol/style/Icon.js","webpack://my_app_vue/./node_modules/ol/style/Text.js","webpack://my_app_vue/./node_modules/ol/expr/expression.js","webpack://my_app_vue/./node_modules/ol/expr/cpu.js","webpack://my_app_vue/./node_modules/ol/render/canvas/style.js","webpack://my_app_vue/./node_modules/ol/layer/BaseVector.js","webpack://my_app_vue/./node_modules/ol/renderer/Map.js","webpack://my_app_vue/./node_modules/ol/render/Event.js","webpack://my_app_vue/./node_modules/ol/renderer/Composite.js","webpack://my_app_vue/./node_modules/ol/layer/Group.js","webpack://my_app_vue/./node_modules/ol/MapEvent.js","webpack://my_app_vue/./node_modules/ol/MapBrowserEvent.js","webpack://my_app_vue/./node_modules/ol/MapBrowserEventType.js","webpack://my_app_vue/./node_modules/ol/pointer/EventType.js","webpack://my_app_vue/./node_modules/ol/MapBrowserEventHandler.js","webpack://my_app_vue/./node_modules/ol/MapEventType.js","webpack://my_app_vue/./node_modules/ol/MapProperty.js","webpack://my_app_vue/./node_modules/ol/structs/PriorityQueue.js","webpack://my_app_vue/./node_modules/ol/TileState.js","webpack://my_app_vue/./node_modules/ol/TileQueue.js","webpack://my_app_vue/./node_modules/ol/control/Control.js","webpack://my_app_vue/./node_modules/ol/control/Attribution.js","webpack://my_app_vue/./node_modules/ol/control/Rotate.js","webpack://my_app_vue/./node_modules/ol/control/Zoom.js","webpack://my_app_vue/./node_modules/ol/control/defaults.js","webpack://my_app_vue/./node_modules/ol/interaction/Property.js","webpack://my_app_vue/./node_modules/ol/interaction/Interaction.js","webpack://my_app_vue/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://my_app_vue/./node_modules/ol/interaction/Pointer.js","webpack://my_app_vue/./node_modules/ol/events/condition.js","webpack://my_app_vue/./node_modules/ol/interaction/DragPan.js","webpack://my_app_vue/./node_modules/ol/interaction/DragRotate.js","webpack://my_app_vue/./node_modules/ol/render/Box.js","webpack://my_app_vue/./node_modules/ol/interaction/DragBox.js","webpack://my_app_vue/./node_modules/ol/interaction/DragZoom.js","webpack://my_app_vue/./node_modules/ol/events/Key.js","webpack://my_app_vue/./node_modules/ol/interaction/KeyboardPan.js","webpack://my_app_vue/./node_modules/ol/interaction/KeyboardZoom.js","webpack://my_app_vue/./node_modules/ol/Kinetic.js","webpack://my_app_vue/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://my_app_vue/./node_modules/ol/interaction/PinchRotate.js","webpack://my_app_vue/./node_modules/ol/interaction/PinchZoom.js","webpack://my_app_vue/./node_modules/ol/interaction/defaults.js","webpack://my_app_vue/./node_modules/ol/Map.js","webpack://my_app_vue/./node_modules/ol/layer/TileProperty.js","webpack://my_app_vue/./node_modules/ol/layer/BaseTile.js","webpack://my_app_vue/./node_modules/ol/renderer/Layer.js","webpack://my_app_vue/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://my_app_vue/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://my_app_vue/./node_modules/ol/renderer/canvas/Layer.js","webpack://my_app_vue/./node_modules/ol/Tile.js","webpack://my_app_vue/./node_modules/ol/ImageTile.js","webpack://my_app_vue/./node_modules/ol/reproj/common.js","webpack://my_app_vue/./node_modules/ol/reproj/Triangulation.js","webpack://my_app_vue/./node_modules/ol/reproj.js","webpack://my_app_vue/./node_modules/ol/reproj/Tile.js","webpack://my_app_vue/./node_modules/ol/TileRange.js","webpack://my_app_vue/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://my_app_vue/./node_modules/ol/layer/Tile.js","webpack://my_app_vue/./node_modules/ol/render/canvas/Instruction.js","webpack://my_app_vue/./node_modules/ol/render/VectorContext.js","webpack://my_app_vue/./node_modules/ol/render/canvas/Builder.js","webpack://my_app_vue/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://my_app_vue/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://my_app_vue/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://my_app_vue/./node_modules/ol/geom/flat/linechunk.js","webpack://my_app_vue/./node_modules/ol/geom/flat/straightchunk.js","webpack://my_app_vue/./node_modules/ol/render/canvas/TextBuilder.js","webpack://my_app_vue/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://my_app_vue/./node_modules/ol/geom/flat/textpath.js","webpack://my_app_vue/./node_modules/ol/geom/flat/length.js","webpack://my_app_vue/./node_modules/ol/render/canvas/Executor.js","webpack://my_app_vue/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://my_app_vue/./node_modules/ol/render/canvas/Immediate.js","webpack://my_app_vue/./node_modules/ol/render/canvas/hitdetect.js","webpack://my_app_vue/./node_modules/ol/renderer/vector.js","webpack://my_app_vue/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://my_app_vue/./node_modules/ol/layer/Vector.js","webpack://my_app_vue/./node_modules/ol/structs/LRUCache.js","webpack://my_app_vue/./node_modules/ol/tilecoord.js","webpack://my_app_vue/./node_modules/ol/TileCache.js","webpack://my_app_vue/./node_modules/ol/source/TileEventType.js","webpack://my_app_vue/./node_modules/ol/source/Source.js","webpack://my_app_vue/./node_modules/ol/tilegrid/TileGrid.js","webpack://my_app_vue/./node_modules/ol/tilegrid.js","webpack://my_app_vue/./node_modules/ol/source/Tile.js","webpack://my_app_vue/./node_modules/ol/tileurlfunction.js","webpack://my_app_vue/./node_modules/ol/source/UrlTile.js","webpack://my_app_vue/./node_modules/ol/source/TileImage.js","webpack://my_app_vue/./node_modules/ol/source/XYZ.js","webpack://my_app_vue/./node_modules/ol/source/common.js","webpack://my_app_vue/./node_modules/ol/uri.js","webpack://my_app_vue/./node_modules/ol/source/arcgisRest.js","webpack://my_app_vue/./node_modules/ol/source/TileArcGISRest.js","webpack://my_app_vue/./node_modules/ol/structs/RBush.js","webpack://my_app_vue/./node_modules/ol/geom/flat/interpolate.js","webpack://my_app_vue/./node_modules/ol/geom/flat/center.js","webpack://my_app_vue/./node_modules/ol/render/Feature.js","webpack://my_app_vue/./node_modules/ol/source/VectorEventType.js","webpack://my_app_vue/./node_modules/ol/loadingstrategy.js","webpack://my_app_vue/./node_modules/ol/featureloader.js","webpack://my_app_vue/./node_modules/ol/source/Vector.js","webpack://my_app_vue/./node_modules/ol/Feature.js","webpack://my_app_vue/./src/pages/dashboard/overview/distribution/index.vue?ec81"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","import request from './utils/request';\n\n/**\n * @description 获取标准分页数据\n * @param {String} url\n * @param {{page, limit}} data\n * @ {*}\n */\nconst getPaginationData = (url, data) => {\n  request({\n    url,\n    method: 'post',\n    data,\n  });\n};\n\n\n\nexport const blogGetAll = ({ page, limit, type, keyword }) =>\n  getPaginationData('/blog/all', { page, limit, type, keyword });\n\nexport const blogUpdate = data =>\n  request({\n    url: '/blog/update',\n    method: 'post',\n    data,\n  });\n\nexport const blogGetOne = id =>\n  request({\n    url: '/blog/get/' + id,\n  });\n\nexport const blogCreate = data =>\n  request({\n    url: '/blog/create',\n    method: 'post',\n    data: data,\n  });\n\nexport const blogDelete = ({ id }) =>\n  request({\n    url: '/blog/delete/' + id,\n  });\n\nexport const blogStasis = ({ type, params }) =>\n  request({\n    url: '/blog/stasis/' + type,\n    params,\n  });\n\nexport const commentCreate = ({ body, blogId, nickName }) =>\n  request({\n    url: '/comment/create',\n    method: 'post',\n    data: {\n      body,\n      blogId,\n      nickName,\n    },\n  });\n\n\n\nexport const commentDelete = ({ id }) =>\n  request({\n    url: '/comment/delete/' + id,\n    method: 'get',\n  });\n\nexport const commentAudit = ({ id }) =>\n  request({\n    url: '/comment/audit/' + id,\n    method: 'get',\n  });\n\nexport const momnetCreate = data =>\n  request({\n    url: '/moment/create',\n    method: 'post',\n    data,\n  });\n\nexport const momnetDelete = ({ id }) =>\n  request({\n    url: '/moment/delete/' + id,\n    method: 'get',\n  });\n\nexport const momnetUpdate = data =>\n  request({\n    url: '/moment/update',\n    method: 'post',\n    data,\n  });\n\nexport const mommentCover = data =>\n  request({\n    url: '/moment/cover',\n    method: 'post',\n    data: data,\n  });\n\nexport const markdown2html = ({ body }) =>\n  request({\n    url: '/blog/markdown2html',\n    method: 'post',\n    data: { body },\n  });\n\nexport const draftCreate = data =>\n  request({\n    url: '/draft/create',\n    method: 'post',\n    data,\n  });\n\nexport const draftMany = (page, limit) => getPaginationData('/draft/many', { page, limit });\n\nexport const draftDelete = ({ id }) =>\n  request({\n    url: '/draft/delete/' + id,\n    method: 'get',\n  });\n\nexport const draftGet = ({ id }) =>\n  request({\n    url: '/draft/get/' + id,\n    method: 'get',\n  });\n\nexport const draftUpdate = data =>\n  request({\n    url: '/draft/create',\n    method: 'post',\n    data,\n  });\n\nexport const draftPublish = id =>\n  request({\n    url: '/draft/publish/' + id,\n    method: 'get',\n  });\n\nexport const userGet = name =>\n  request({\n    url: '/user/get/' + name,\n    method: 'get',\n  });\nexport const userUpdate = data =>\n  request({\n    url: '/user/update',\n    method: 'post',\n    data,\n  });\n","<template>\n  <div class=\"distribution\">\n    <div class=\"map\" id=\"map\"></div>\n    <div class=\"opt\">\n      <div class=\"opt-item\">\n        <input type=\"date\" v-model=\"date\" @change=\"fetchPOI\" />\n      </div>\n      <select v-model=\"layer\">\n        <option value=\"vector\" label=\"高德地图\"></option>\n        <option value=\"satellite\" label=\"ESRI卫星地图\"></option>\n        <option value=\"world_street\" label=\"ESRI世界地图\"></option>\n      </select>\n    </div>\n    <Loading v-if=\"loading\" left=\"95%\" top=\"5%\" size=\"1vw\" />\n  </div>\n</template>\n\n<script>\nimport { Map, View } from 'ol';\nimport { Vector as vLayer, Tile } from 'ol/layer';\nimport { Vector as VSource, XYZ, TileArcGISRest as ArcgisSource } from 'ol/source';\nimport { fromLonLat } from 'ol/proj';\nimport Loading from '@/components/Loading.vue';\nimport { blogStasis } from '@/api';\nimport { Point } from 'ol/geom';\nimport Feature from 'ol/Feature';\nimport {fmtNowDate} from '@/utils/tool';\n\n\n/**\n * @type {Map}\n */\nlet map;\nlet poiLyr;\n\nexport default {\n  name: 'Distribution',\n  components: { Loading },\n  data() {\n    return {\n      loading: false,\n      layer: 'vector',\n      date: null,\n    };\n  },\n  computed: {},\n  watch: {\n    layer(val) {\n      this.changeLayer(val);\n    },\n  },\n  beforeMount() {\n    this.date = fmtNowDate()\n  },\n  mounted() {\n    this.initMap();\n    this.changeLayer(this.layer);\n    this.fetchPOI();\n  },\n  beforeUnmount() {\n    if (typeof map == 'undefined') return;\n    map.un('rendercomplete', this.loadCompleteEvtHandler.bind(this));\n    map.un('loadstart', this.loadStartEvtHandler.bind(this));\n  },\n  methods: {\n    initMap() {\n      map = new Map({\n        target: 'map',\n        layers: [],\n        view: new View({\n          zoom: 4,\n          center: fromLonLat([100, 39]),\n          minZoom: 3,\n        }),\n      });\n      map.on('rendercomplete', this.loadCompleteEvtHandler.bind(this));\n      map.on('loadstart', this.loadStartEvtHandler.bind(this));\n      window.map = map;\n    },\n    loadCompleteEvtHandler(evt) {\n      this.loading = false;\n    },\n    loadStartEvtHandler(evt) {\n      this.loading = true;\n    },\n    changeLayer(name) {\n      for (let lyr of map.getAllLayers()) {\n        console.log(lyr.id);\n        if (lyr.name != 'poi') {\n          map.removeLayer(lyr);\n        }\n      }\n      let lyr;\n      if (name == 'vector') {\n        lyr = new Tile({\n          name: name,\n          zIndex: 0,\n          source: new XYZ({\n            url: 'https://webrd02.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',\n          }),\n        });\n      } else if (name == 'satellite') {\n        lyr = new Tile({\n          name: name,\n          zIndex: 0,\n          source: new ArcgisSource({\n            url: 'https://server.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer',\n          }),\n        });\n      } else if (name == 'world_street') {\n        lyr = new Tile({\n          name: name,\n          zIndex: 0,\n          source: new ArcgisSource({\n            url: 'https://server.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer',\n          }),\n        });\n      }\n      if (typeof lyr != 'undefined') {\n        map.addLayer(lyr);\n      }\n    },\n    fetchPOI() {\n      if (typeof poiLyr != 'undefined') {\n        map.removeLayer(poiLyr);\n        poiLyr = undefined;\n      }\n      const params = {'date': this.date};\n      blogStasis({ type: 'distribution' , params}).then(res => {\n        /**\n         * @type {Array}\n         */\n        let pois = res.data.data;\n        let feats = pois.map(item => {\n          return new Feature({\n            geometry: new Point(fromLonLat([item.lon, item.lat])),\n          });\n        });\n        poiLyr = new vLayer({\n          name: 'poi',\n          source: new VSource({\n            features: feats,\n          }),\n          zIndex: 99,\n        });\n        map.addLayer(poiLyr);\n      });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.distribution {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  #map {\n    width: 100%;\n    height: 100%;\n  }\n  .opt {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    position: absolute;\n    left: 1%;\n    bottom: 1%;\n    padding: 5px;\n    background-color: $--baseColor;\n    border-radius: 5px;\n    ul {\n      list-style: none;\n    }\n    input {\n      flex: 1;\n    }\n  }\n}\n</style>\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  compose as composeTransform,\n  makeInverse,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params,\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio,\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, options.ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params,\n    );\n\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {createEmpty} from '../extent.js';\nimport {getRequestUrl} from './arcgisRest.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params,\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","import { render } from \"./index.vue?vue&type=template&id=7bbdd920&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=7bbdd920&scoped=true&lang=scss\"\n\nimport exportComponent from \"/Users/wsh/Desktop/repos/mylog-admin/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7bbdd920\"]])\n\nexport default __exports__"],"names":["t","i","module","exports","this","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","m","max","floor","c","min","p","d","x","length","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","blogStasis","type","params","request","url","userGet","name","method","userUpdate","class","_createElementVNode","id","value","label","_hoisted_5","_hoisted_6","_hoisted_7","_createElementBlock","_hoisted_2","$data","$event","onChange","$options","_createBlock","_component_Loading","left","top","size","BaseEvent","constructor","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","b","linearFindNearest","arr","direction","candidate","reverseSubArray","begin","end","tmp","extend","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","call","arguments","arrayEquals","toPromise","getter","promiseGetter","err","Promise","reject","resolve","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ADD","REMOVE","Property","LENGTH","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","assert","assertion","errorMessage","clamp","squaredSegmentDistance","y","x1","y1","x2","y2","dx","dy","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","absValue","j","coef","k","toRadians","angleInDegrees","PI","modulo","lerp","toFixed","decimals","factor","round","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","EPSG4326Projection","cache","replace","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","transform","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","buffer","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","stops","width","wrapX","projectionExtent","worldWidth","worldsAway","wrapAndSliceX","isFinite","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","error","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","create","setFromArray","transform1","transform2","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","matrixPrecision","toString","transformString","map","join","transform2D","anchor","anchorX","anchorY","deltaX","deltaY","translate","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverse","reverseCoordinates","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","degrees","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","IDLE","LOADING","LOADED","EMPTY","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","xn","yn","zn","vn","yr","lchuv","luv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","parse","cstr","space","parts","alpha","toLowerCase","names","base","isShort","parseInt","exec","dims","trim","split","shift","parseFloat","endsWith","test","match","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","_","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","then","catch","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","ImageState","createPattern","setSize","maxCacheSize","colorString","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","fillStyle","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","style","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","offsetHeight","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getGeometry","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","geometryType","getTypeFromHint","typeHint","encoded","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","parsers","createParser","withArgsCount","withGetArgs","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","usesGeometryType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","JSON","stringify","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","condition","needleType","colors","parsedColors","returnType","argValidators","actualType","parser","computeGeometryType","substring","getGeometries","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","concat","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","nameExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","hasFeature","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","renderedLayerStates","previousElement","layerIndex","sourceState","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","attribution","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","updateElement_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","getClientRects","oldSize","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","_defineProperty","enumerable","configurable","ZIndexContext","instructions_","context_","Proxy","CanvasRenderingContext2D","pushMethodArgs_","draw","instructionsAtIndex","instructionAtIndex","pixelContext","createPixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","toTransformString","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","executor","targetContext","builderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","loadingPromises","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","transformToString","hasRenderListeners","clipped","getSquaredRenderTolerance","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","appendParams","uri","keyParams","encodeURIComponent","qs","getRequestUrl","baseUrl","srid","imageResolution","modifiedUrl","TileArcGISRest","params_","hidpi_","hidpi","getKeyForParams_","getParams","getRequestUrl_","tileExtent","updateParams","baseParams","maxEntries","rbush_","RBush_","items_","extents","items","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","interpolatePoint","cumulativeLengths","linearRingss","RenderFeature","id_","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","linearRingssCenter","midpoint","enableSimplifyTransformed","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","format","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","removed","setLoader","Feature","geometryOrProperties","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","poiLyr","components","Loading","date","computed","watch","changeLayer","beforeMount","fmtNowDate","mounted","initMap","fetchPOI","beforeUnmount","loadCompleteEvtHandler","loadStartEvtHandler","methods","lyr","ArcgisSource","pois","feats","lon","lat","vLayer","VSource","__exports__"],"sourceRoot":""}